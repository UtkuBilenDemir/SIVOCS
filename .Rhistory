items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 3, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 1, y = -100, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
a1_q <- "How would you rate your experience with transdisciplinary research?"
a1_table_df <- data.frame(Answer = c(
"0..not experienced at all", 1:9, "10..highly experienced", "No answer", "Not completed","Total(gross)"
),
Count = c(19,
18,
27,
35,
22,
40,
33,
61,
41,
31,
47,
14,
12,
400),
Percentage = c("4.75%",
"4.50%",
"6.75%",
"8.75%",
"5.50%",
"10.00%",
"8.25%",
"15.25%",
"10.25%",
"7.75%",
"11.75%",
"3.50%",
"3.00%",
"100.00%"
)
)
myft <- flextable(a1_table_df
#col_keys = c("Answer",	"Count",	"Gross percentage")
)
myft <- add_header_row(
x = myft, values = c("How would you rate your experience with transdisciplinary research?"),
colwidths = c(3))
myft <- theme_vanilla(myft)
myft <- align(myft, j=3, align = "right", part = "all")
myft <- set_table_properties(myft, layout = "autofit")
print(myft, preview = "docx")
myft
age <- factor(data.questions$age)
levels(age) <- c(NA, "< 39", "40ies", "50ies", "60ies", "> 70")
a <- as.data.frame(table(data.questions$transdisciplinaryExp.rate.))
c <-  data.frame(t = data.questions$transdisciplinaryExp.rate.,
#    d = meta_df$domain
d = age
)
c1 <- as.data.frame(table(c))
n <- sum(!is.na(data.questions$transdisciplinaryExp.rate.))
no <- length(data.questions$transdisciplinaryExp.rate.)
ggplot(data=c1, aes(x=t, y=Freq, fill = d)) +
theme_light() +
geom_bar(stat="identity") +
xlab("Transdisciplinary Experience") +
ylab("Count") +
scale_fill_manual("Age", values = col_seq5_alt) +
theme(legend.position="top") +
annotate("label", x = 1.5, y = 55, label = "bold(n) == 352/361", parse = TRUE)
ad_df <- as.data.frame(cbind(
a1 = feat_df.num$transdisciplinaryExp.rate.,
d12 = feat_df.num$motivation.prob.,
d13 = feat_df.num$motivation.welfare.
))
ad_df$a1 <- likert_recode(ad_df$a1)
# TODO: Interpret the correlations
cor(feat_df.num$transdisciplinaryExp.rate., ad_df$d13, method = "spearman", use = "pairwise.complete.obs")
cor(feat_df.num$transdisciplinaryExp.rate., ad_df$d12, method = "spearman", use = "pairwise.complete.obs")
a11_boxplot <- ad_df[, c(1,2)] %>%
filter(!is.na(a1)) %>%
gather(key="d12", value="a1") %>%
ggplot(aes(x=d12, y=a1, fill=a1),  show.legend = FALSE) +
geom_boxplot() +
ylab(" ") +
theme_light() +
xlab("Motivation to address a non-academic problem") +
# scale_fill_manual(values=c("#FC4E07", "#E7B800", "#00AFBB"),
# scale_fill_manual(values=col_seq[(length(col_seq) -2):length(col_seq) ],
scale_fill_manual(values=col_seq,
name="Transdisciplinary Experience") +
theme(axis.text.y=element_blank(), legend.position = "none") +
scale_x_continuous(breaks = seq(0,10,2))
a12_boxplot <- ad_df[, c(1,3)] %>%
filter(!is.na(a1)) %>%
gather(key="d13", value="a1") %>%
ggplot(aes(x=d13, y=a1, fill=a1)) +
geom_boxplot() +
ylab(" ") +
theme_light() +
theme(axis.text.y=element_blank()) +
xlab("Motivation to improve human condition") +
scale_fill_manual(values=col_seq, name="Transdisciplinary Experience") +
scale_x_continuous(breaks = seq(0,10,2)) +
# Reverse the legend
guides(fill = guide_legend(reverse = TRUE))
a11_boxplot + a12_boxplot
library(modelsummary)
library(Hmisc)
model <- rcorr(as.matrix(as.data.frame(cbind(
Trans._Exp. =feat_df.num$transdisciplinaryExp.rate.,
Mot._to_add_Pr. = ad_df$d12,
Mot._to_imp._HC = ad_df$d13))), type = "spearman")
whatever <- as.data.frame(as.matrix(as.data.frame(cbind(
Trans._Exp. =feat_df.num$transdisciplinaryExp.rate.,
Mot._to_add_Pr. = ad_df$d12,
Mot._to_imp._HC = ad_df$d13))))
datasummary_correlation(whatever
#, output = "./05_report/02_final_feedback/model1.docx"
, method = "spearman"
, modelsummary_factory_word = 'flextable',
statistic = "({p.value})" )
# datasummary(whatever)
c <- as.data.frame(table(data.questions$academicAge))
c <- c[2:nrow(c), ]
levels(c$Var1) <- c("", "6-10 years", "11-15 years", ">15 years" )
a_plot <- ggplot(data=c, aes(x=Var1, y=Freq)) +
theme_light() +
geom_bar(stat="identity", fill = col_bar) +
xlab("Academic Age") +
ylab("") +
geom_text(aes(label=Freq), vjust=1.6, color="white", size=3)
age <- factor(data.questions$age)
levels(age) <- c(NA, "< 39", "40ies", "50ies", "60ies", "> 70")
age_table <- as.data.frame(table(age))
b_plot <- ggplot(data=age_table, aes(x=age, y=Freq)) +
theme_light() +
geom_bar(stat="identity", fill = col_bar2) +
xlab("Age") +
ylab("Count") +
geom_text(aes(label=Freq), vjust=1.6, color="white", size=3)
b_plot + a_plot
a <- as.data.frame(table(data.questions$familiarWithSI.response.))
c <-  data.frame(t = data.questions$familiarWithSI.response.,
d = meta_df$domain)
c1 <- as.data.frame(table(c))
n <- sum(!is.na(data.questions$familiarWithSI.response.))
no <- length(data.questions$familiarWithSI.response.)
ggplot(data=c1, aes(x=t, y=Freq, fill = d)) +
theme_light() +
geom_bar(stat="identity") +
xlab("Familiarity with SI") +
ylab("Count") +
scale_fill_manual("Domain", values = col_dom) +
theme(legend.position="top") +
annotate("label", x = 10.5, y = 105, label = "bold(n) == 360/361", parse = TRUE)
b1_table_df <- data.frame(Answer = c("0..not at all", 1:9, "10..fully", "No answer", "Not completed", "Total(gross)"),
Count = c(126,
38,
33,
40,
25,
39,
19,
20,
21,
6,
15,
4,
14,
400
),
Percentage = c(
"31.50%",
"9.50%",
"8.25%",
"10.00%",
"6.25%",
"9.75%",
"4.75%",
"5.00%",
"5.25%",
"1.50%",
"3.75%",
"1.00%",
"3.50%",
"100.00%"
)
)
b1_q <- "How familiar are you with the concept of social innovation?"
# myft <- flextable(b1_table_df
#                   #col_keys = c("Answer",	"Count",	"Gross percentage")
# )
# myft <- add_header_row(
#   x = myft, values = b1_q,
#   colwidths = c(3))
#
# myft <- theme_vanilla(myft)
# myft <- align(myft, j=3, align = "right", part = "all")
# myft <- set_table_properties(myft, layout = "autofit")
# print(myft, preview = "docx")
# myft
b1.shapiro <- shapiro.test(data$familiarWithSI.response.)
b1.barlett <- bartlett.test(data=data, familiarWithSI.response. ~ domain)
b1.kruswal <- kruskal.test(data=data, familiarWithSI.response. ~ domain)
b1.pwilcox <- pairwise.wilcox.test(data$familiarWithSI.response.,
data$domain,
mu = 0,
alt = "two.sided",
conf.int = T,
conf.level = 0.95,
paired = F,
correct = T,
p.adjust="bonferroni" )
b1.shapiro
b1.barlett
b1.kruswal
b1.pwilcox
b1domain.df <-data.frame(familiarWithSI = data$familiarWithSI.response.,
domain =  data$domain)
b1domain.df$familiarWithSI <- as.numeric(b1domain.df$familiarWithSI)
b1domain.df %>%
gather(key="domain", value="familiarWithSI") %>%
ggplot( aes(x=familiarWithSI, y=domain, fill=domain),  show.legend = FALSE) +
geom_boxplot() +
ylab(" ")+
theme_light() +
theme(axis.text.y=element_blank())+ scale_fill_discrete(name = "Domain") + xlab("Familiarity with SI") + scale_fill_manual(values=c("#FC4E07", "#E7B800", "#00AFBB"), name="Domain") +
scale_x_continuous(breaks = seq(0,10,2))
table(feat_df$contribToSI.rate.)
c <- as.data.frame(table(feat_df.num$contribToSI.rate.))
sum(!is.na(feat_df.num$contribToSI.rate.))
ggplot(data=c, aes(x=Var1, y=Freq)) +
theme_light() +
geom_bar(stat="identity", fill = col_bar) +
xlab("SI-Contribution (self-assessment)") +
ylab("Count") +
annotate("label", x = 1.5, y = 20.5, label = "bold(n) == 112/361", parse = TRUE)
items_likert
likert_plot(items_likert[c(2,3,1),], h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 3, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 1, y = -100, label = "bold(n) == 112/361", parse = TRUE)
items_likert
items_likert[c(2,3,1),]
items_likert[c(3,1,2), ]
str(items_likert)
items_likert$results
items_likert$results[c(3,1,2), ]
items_likert$results[c(3,1,2), ]
items_likert$results
items_likert$results[c(2,3,1), ]
items_likert$results <- items_likert$results[c(2,3,1), ]
likert_plot(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 3, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 1, y = -100, label = "bold(n) == 112/361", parse = TRUE)
?likert_plot
likert_plot
names(items_likert$results)[2,3,1]
items_likert$results
items_likert$results$Item
items_likert$results$Item[2,3,1]
as.vector(items_likert$results$Item)[2,3,1]
as.vector(items_likert$results$Item)
as.vector(items_likert$results$Item)[c(2,3,1)]
a1b1c2 <- as.data.frame(cbind(
data[, a1.colnames],
data$familiarWithSI.response.,
data$contribToSI.rate.
))
sum(!is.na(a1b1c2$`Project's contribution to social innovation`))
names(a1b1c2) <- c(
V1 = "Experience with transdisciplinary research",
V2 = "Familiarity with the concept of 'social innovation'",
V3 = "Project's contribution to social innovation"
)
#likert_recode(a1b1c2)
items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot2 <- function(recoded_likert, h=TRUE, t=4, c = 1:3) {
plot( recoded_likert,
# Group the items alphabetically
group.order=as.vector(items_likert$results$Item)[c(2,3,1)],
# Plot the percentages for each response category
plot.percents = TRUE,
# Plot the total percentage for negative responses
plot.percent.low = FALSE,
# Plot the total percentage for positive responses
plot.percent.high = FALSE,
# Whether response categories should be centered
# This is only helpful when there is a middle response
# option such as "neutral" or "neither agree nor disagree"
centered = TRUE,
include.histogram = h,
# Wrap label text for item labels
wrap=80,
text.size=t,
colors =  c("#D32F49", "#F4A582", "#DFDFDF", "#92C5DE", "#338BBE")[c]
)
}
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 3, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 1, y = -100, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
a1b1c2 <- as.data.frame(cbind(
data[, a1.colnames],
data$familiarWithSI.response.,
data$contribToSI.rate.
))
sum(!is.na(a1b1c2$`Project's contribution to social innovation`))
names(a1b1c2) <- c(
V1 = "Experience with transdisciplinary research",
V2 = "Familiarity with the concept of 'social innovation'",
V3 = "Project's contribution to social innovation"
)
#likert_recode(a1b1c2)
items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot2 <- function(recoded_likert, h=TRUE, t=4, c = 1:3) {
plot( recoded_likert,
# Group the items alphabetically
group.order=as.vector(items_likert$results$Item)[c(2,3,1)],
# Plot the percentages for each response category
plot.percents = TRUE,
# Plot the total percentage for negative responses
plot.percent.low = FALSE,
# Plot the total percentage for positive responses
plot.percent.high = FALSE,
# Whether response categories should be centered
# This is only helpful when there is a middle response
# option such as "neutral" or "neither agree nor disagree"
centered = TRUE,
include.histogram = h,
# Wrap label text for item labels
wrap=80,
text.size=t,
colors =  c("#D32F49", "#F4A582", "#DFDFDF", "#92C5DE", "#338BBE")[c]
)
}
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 2, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 1, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 3, y = -100, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
a1b1c2 <- as.data.frame(cbind(
data[, a1.colnames],
data$familiarWithSI.response.,
data$contribToSI.rate.
))
sum(!is.na(a1b1c2$`Project's contribution to social innovation`))
names(a1b1c2) <- c(
V1 = "Experience with transdisciplinary research",
V2 = "Familiarity with the concept of 'social innovation'",
V3 = "Project's contribution to social innovation"
)
#likert_recode(a1b1c2)
items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot2 <- function(recoded_likert, h=TRUE, t=4, c = 1:3) {
plot( recoded_likert,
# Group the items alphabetically
group.order=as.vector(items_likert$results$Item)[c(2,3,1)],
# Plot the percentages for each response category
plot.percents = TRUE,
# Plot the total percentage for negative responses
plot.percent.low = FALSE,
# Plot the total percentage for positive responses
plot.percent.high = FALSE,
# Whether response categories should be centered
# This is only helpful when there is a middle response
# option such as "neutral" or "neither agree nor disagree"
centered = TRUE,
include.histogram = h,
# Wrap label text for item labels
wrap=80,
text.size=t,
colors =  c("#D32F49", "#F4A582", "#DFDFDF", "#92C5DE", "#338BBE")[c]
)
}
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 1, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 3, y = -100, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
a1b1c2 <- as.data.frame(cbind(
data[, a1.colnames],
data$familiarWithSI.response.,
data$contribToSI.rate.
))
sum(!is.na(a1b1c2$`Project's contribution to social innovation`))
names(a1b1c2) <- c(
V1 = "Experience with transdisciplinary research",
V2 = "Familiarity with the concept of 'social innovation'",
V3 = "Project's contribution to social innovation"
)
#likert_recode(a1b1c2)
items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot2 <- function(recoded_likert, h=TRUE, t=4, c = 1:3) {
plot( recoded_likert,
# Group the items alphabetically
group.order=as.vector(items_likert$results$Item)[c(2,3,1)],
# Plot the percentages for each response category
plot.percents = TRUE,
# Plot the total percentage for negative responses
plot.percent.low = FALSE,
# Plot the total percentage for positive responses
plot.percent.high = FALSE,
# Whether response categories should be centered
# This is only helpful when there is a middle response
# option such as "neutral" or "neither agree nor disagree"
centered = TRUE,
include.histogram = h,
# Wrap label text for item labels
wrap=80,
text.size=t,
colors =  c("#D32F49", "#F4A582", "#DFDFDF", "#92C5DE", "#338BBE")[c]
)
}
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 1, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 3, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
a1b1c2 <- as.data.frame(cbind(
data[, a1.colnames],
data$familiarWithSI.response.,
data$contribToSI.rate.
))
sum(!is.na(a1b1c2$`Project's contribution to social innovation`))
names(a1b1c2) <- c(
V1 = "Experience with transdisciplinary research",
V2 = "Familiarity with the concept of 'social innovation'",
V3 = "Project's contribution to social innovation"
)
#likert_recode(a1b1c2)
items_likert <-
#round(d1.df) %>%
a1b1c2 %>%
mutate_all(likert_recode) %>%
#likert(grouping=data$domain)
likert()
likert_plot2 <- function(recoded_likert, h=TRUE, t=4, c = 1:3) {
plot( recoded_likert,
# Group the items alphabetically
group.order=as.vector(items_likert$results$Item)[c(2,3,1)],
# Plot the percentages for each response category
plot.percents = TRUE,
# Plot the total percentage for negative responses
plot.percent.low = FALSE,
# Plot the total percentage for positive responses
plot.percent.high = FALSE,
# Whether response categories should be centered
# This is only helpful when there is a middle response
# option such as "neutral" or "neither agree nor disagree"
centered = TRUE,
include.histogram = h,
# Wrap label text for item labels
wrap=80,
text.size=t,
colors =  c("#D32F49", "#F4A582", "#DFDFDF", "#92C5DE", "#338BBE")[c]
)
}
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 1, y = -90, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 3, y = -90, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 2, y = -90, label = "bold(n) == 112/361", parse = TRUE)
39 + 19 + 20 + 21 + 6 + 15
likert_plot2(items_likert, h=FALSE, c=c(1,3,5)) + theme( axis.text.y = element_text(
size=g_tick_size_main), axis.text.x = element_text(
size=g_tick_size_side), axis.title=element_text(size=g_tick_size_side), legend.text=element_text(size=g_tick_size_side)) +
annotate("label", x = 1, y = -100, label = "bold(n) == 352/361", parse = TRUE) +
annotate("label", x = 3, y = -100, label = "bold(n) == 360/361", parse = TRUE) +
annotate("label", x = 2, y = -100, label = "bold(n) == 112/361", parse = TRUE)
