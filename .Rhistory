library(ggbeeswarm)
library(plotly)
library(magrittr)
library(ggplot2)
library(PerformanceAnalytics)
library(psych)
library(corrplot)
library(nFactors)
library(kableExtra)
require(ggiraph)
require(ggiraphExtra)
require(plyr)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(tidyverse)
library(gt)
library(grid)
library(ggpubr)
library(psych)
library(GPArotation)
library(car)
library(candisc)
library(jtools)
library(formattable)
# Activate likert and plyr
library(likert)
library(plyr)
library(ggcorrplot)
library(waffle)
library(hrbrthemes)
library(tidyverse)
library(scales)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
setwd("/home/ubd/Nextcloud/utku_SIVOCS")
# Data Frame
source("./02_analysis/02_static_responses.R")
# colnames of the specific question groups
source("./02_analysis/99_question_groups.R")
# A good table to display factor analysis
source("https://raw.githubusercontent.com/franciscowilhelm/r-collection/master/fa_table.R")
den <- read.csv("./01_data/sample_meta.csv")
domain_colors <- c("#FC4E07", "#E7B800", "#00AFBB")
knitr::opts_chunk$set(fig.retina=2, echo=FALSE, dev='svg')
data$domain[data$domain == unique(data$domain)[1]] <- "Math., Natur. and Eng. Sci."
g_tick_size_main <- 14
g_tick_size_side <- 12
a <- as.data.frame(table(data.questions$familiarWithSI.response.))
ggplot(data=a, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
tab_model(shapiro.test(data$familiarWithSI.response.))
lm_scatter( data.questions, x = data.questions$motivation.welfare., y = data.questions$impactTargetGroup.pub., posx=0, posy=9,
labx="Motivation to imp. human condition", laby="Contribution to better public services/products")
cor.test(data.questions$motivation.welfare., data.questions$impactTargetGroup.pub., method="spearman", use = "complete.obs")
shapiro.test(data$Impactstatements.understanding.)
shapiro.test(data.questions$Impactstatements.understanding.)
shapiro.test(data.questions$groupsInvolved.citiz.)
kwtest <- kruskal.test(data=data.questions, Impactstatements.understanding. ~ groupsInvolved.citiz.)
kwtest
e1.wilcox <- wilcox.test(data=data, Impactstatements.understanding. ~ groupsInvolved.citiz., mu = 0, alt = "two.sided", conf.int = T, conf.level = 0.95, paired = F, correct = T )
b1.wilcox
e1.wilcox <- wilcox.test(data=data, Impactstatements.understanding. ~ groupsInvolved.citiz., mu = 0, alt = "two.sided", conf.int = T, conf.level = 0.95, paired = F, correct = T )
lm_scatter( data=data.questions, Impactstatements.understanding. ~ groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter( data=data.questions, data.questions$Impactstatements.understanding. ~ data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter( data=data.questions, data.questions$Impactstatements.understanding.,  data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter(data.questions, x=data.questions$Impactstatements.understanding.,  y=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")+
scale_x_continuous(breaks = seq(0,2,1))
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")+
scale_x_continuous(breaks = seq(0,2))
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")+
scale_x_discrete(breaks = seq(0,2))
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
labx="Deeper/better understanding of a specific social issue", laby="Involvement level of citizens")
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
laby="Deeper/better understanding of a specific social issue", labx="Involvement level of citizens")
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
laby="Deeper/better understanding of a specific social issue", labx="Involvement level of citizens")
cor.test(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., method="spearman", use = "complete.obs")
cor.test(data.questions$Impactstatements.understanding., data.questions$groupsInvolved.citiz., method="spearman", use = "complete.obs")
pheno <- as.data.frame(table(data.questions$motivation.pheno.))
pheno
pheno <- as.data.frame(table(data.questions$motivation.pheno.))
ggplot(data=pheno, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
shapiro.test(data.questions$motivation.pheno.)
kwtest <- kruskal.test(data=data.questions, motivation.pheno. ~ domain)
kwtest
kwtest <- kruskal.test(data=data.questions, motivation.prob. ~ domain)
kwtest
kwtest <- kruskal.test(data=data.questions, motivation.welfare. ~ domain)
kwtest
data.questions_num <- data.questions[, sapply(FUN=is.numeric, data.questions)]
boxplot(data.questions_num, horizontal = T, col='steelblue')
library(tufte)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
cache.extra = packageVersion("tufte")
)
options(htmltools.dir.version = FALSE)
library(dplyr)
library(plyr)
library(ggplot2)
library(ggbeeswarm)
library(plotly)
library(magrittr)
library(ggplot2)
library(PerformanceAnalytics)
library(psych)
library(corrplot)
library(nFactors)
library(kableExtra)
require(ggiraph)
require(ggiraphExtra)
require(plyr)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(tidyverse)
library(gt)
library(grid)
library(ggpubr)
library(psych)
library(GPArotation)
library(car)
library(candisc)
library(jtools)
library(formattable)
# Activate likert and plyr
library(likert)
library(plyr)
library(ggcorrplot)
library(waffle)
library(hrbrthemes)
library(tidyverse)
library(scales)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
setwd("/home/ubd/Nextcloud/utku_SIVOCS")
# Data Frame
source("./02_analysis/02_static_responses.R")
# colnames of the specific question groups
source("./02_analysis/99_question_groups.R")
# A good table to display factor analysis
source("https://raw.githubusercontent.com/franciscowilhelm/r-collection/master/fa_table.R")
den <- read.csv("./01_data/sample_meta.csv")
domain_colors <- c("#FC4E07", "#E7B800", "#00AFBB")
knitr::opts_chunk$set(fig.retina=2, echo=FALSE, dev='svg')
data$domain[data$domain == unique(data$domain)[1]] <- "Math., Natur. and Eng. Sci."
g_tick_size_main <- 14
g_tick_size_side <- 12
shapiro.test(data$familiarWithSI.response.)
a <- as.data.frame(table(data.questions$familiarWithSI.response.))
ggplot(data=a, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
data.questions_num <- data.questions[, sapply(FUN=is.numeric, data.questions)]
boxplot(data.questions_num, horizontal = T, col='steelblue')
b1domain.df <-data.frame(familiarWithSI = data$familiarWithSI.response.,
domain =  data$domain)
b1.aov <- aov(data=b1domain.df, familiarWithSI ~ domain)
summary(b1.aov)
broom::tidy(pairwise.t.test(b1domain.df$familiarWithSI,  b1domain.df$domain))
bartlett.test(data=data, familiarWithSI.response. ~ domain)
kwtest <- kruskal.test(data=data, familiarWithSI.response. ~ domain)
kwtest
b1domain.df <-data.frame(familiarWithSI = data$familiarWithSI.response.,
domain =  data$domain)
b1.wilcox <- wilcox.test(data=data, familiarWithSI.response. ~ SSH, mu = 0, alt = "two.sided", conf.int = T, conf.level = 0.95, paired = F, exact =  T, correct = T )
b1.wilcox
b1domain.df <-data.frame(familiarWithSI = data$familiarWithSI.response.,
domain =  data$domain)
b1.wilcox <- wilcox.test(data=data, familiarWithSI.response. ~ Math._Natur._and_Eng., mu = 0, alt = "two.sided", conf.int = T, conf.level = 0.95, paired = F, correct = T )
b1.wilcox
b1domain.df <-data.frame(familiarWithSI = data$familiarWithSI.response.,
domain =  data$domain)
b1domain.df$familiarWithSI <- as.numeric(b1domain.df$familiarWithSI)
b1domain.df %>%
gather(key="domain", value="familiarWithSI") %>%
ggplot( aes(x=familiarWithSI, y=domain, fill=domain),  show.legend = FALSE) +
geom_boxplot() +
ylab(" ")+
theme_light() +
theme(axis.text.y=element_blank())+ scale_fill_discrete(name = "Domain") + xlab("Familiarity with SI") + scale_fill_manual(values=c("#FC4E07", "#E7B800", "#00AFBB"), name="Domain") +
scale_x_continuous(breaks = seq(0,10,2))
b1domain.df$trans_exp <- data$transdisciplinaryExp.rate.
cor.test(b1domain.df$trans_exp, b1domain.df$familiarWithSI, method="spearman", use = "complete.obs")
lm_scatter(b1domain.df, x= b1domain.df$trans_exp, y=b1domain.df$familiarWithSI, posx=0, posy=9,
labx="Transdisciplinary experience", laby="Familiarity with SI")
shapiro.test(data$transdisciplinaryExp.rate.)
data$age <- as.factor(data$age)
bartlett.test(data=data, transdisciplinaryExp.rate. ~ age)
kwtest <- kruskal.test(data=data, transdisciplinaryExp.rate. ~ age)
kwtest
cor.test(data.questions$motivation.welfare., data.questions$impactTargetGroup.pub., method="spearman", use = "complete.obs")
lm_scatter( data.questions, x = data.questions$motivation.welfare., y = data.questions$impactTargetGroup.pub., posx=0, posy=9,
labx="Motivation to imp. human condition", laby="Contribution to better public services/products")
shapiro.test(data.questions$Impactstatements.understanding.)
shapiro.test(data.questions$groupsInvolved.citiz.)
kwtest <- kruskal.test(data=data.questions, Impactstatements.understanding. ~ groupsInvolved.citiz.)
kwtest
cor.test(data.questions$Impactstatements.understanding., data.questions$groupsInvolved.citiz., method="spearman", use = "complete.obs")
lm_scatter(data.questions, y=data.questions$Impactstatements.understanding., x=data.questions$groupsInvolved.citiz., posx=0, posy=9,
laby="Deeper/better understanding of a specific social issue", labx="Involvement level of citizens")
pheno <- as.data.frame(table(data.questions$motivation.pheno.))
ggplot(data=pheno, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
shapiro.test(data.questions$motivation.pheno.)
kwtest <- kruskal.test(data=data.questions, motivation.pheno. ~ domain)
kwtest
prob <- as.data.frame(table(data.questions$motivation.prob.))
ggplot(data=prob, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
shapiro.test(data.questions$motivation.prob.)
kwtest <- kruskal.test(data=data.questions, motivation.prob. ~ domain)
kwtest
welfare <- as.data.frame(table(data.questions$motivation.welfare.))
ggplot(data=welfare, aes(x=Var1, y=Freq)) +
geom_bar(stat="identity")
shapiro.test(data.questions$motivation.welfare.)
kwtest <- kruskal.test(data=data.questions, motivation.welfare. ~ domain)
kwtest
source("./02_analysis/02_static_responses.R")
df_ult <- readRDS("df_ult.RDS")
data[data == 99] <- NA
data[data == 88] <- NA
int_data <- data
int_data$it <- e12.trans_df$inv.trans
# TODO: Consider including all high SI Knowledge people
rm_ids <- function (df1, df2) {
cat(df2$projID, " are removed")
out <- df1[!c(df1$projID %in% df2$projID), ]
rownames(out) <- 1:nrow(out)
return(out)
}
# Remove the existent interview candidates
int_data <- int_data[-c(which(int_data$projID %in% df_ult$projID)),]
rownames(int_data) <- 1:nrow(int_data)
# --- Low mot vs. high contrib
df.low_mot_high_contrib <- int_data[int_data$benefitForNonAcademy == 0 &
int_data$contribToSI.rate. >= 6,
]
df.low_mot_high_contrib$reasoning <- "Low motiv. to benefit for society - High SI contrib."
#--------------------------------------------------0
df.out <- df.low_mot_high_contrib
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
# --- High outcome - low trans. involvement of citizens
df.high_outcome_low_trans <- int_data[int_data$impactTargetGroup.pub. >= 7 &
int_data$groupsInvolved.citiz. < 1 &
int_data$groupsInvolved.welfare. < 1 &
int_data$groupsInvolved.media. < 1 &
int_data$groupsInvolved.policy. < 1 &
int_data$groupsInvolved.civsoc.< 1
, ]
df.high_outcome_low_trans$reasoning <- "Low trans. involvement - High public outcome"
nrow(df.high_outcome_low_trans)
#--------------------------------------------------0.1
df.out <- rbind(df.out, df.high_outcome_low_trans)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
nrow(df.out)
# --- HIGH SI contirb vs LOW trans involv. (USELESS)
ccc <- int_data[int_data$it <= 1 & int_data$contribToSI.rate. >= 6, ]
which(!is.na(ccc$id))
#-------------------------------------------------- 4
ccc$reasoning <- "LOW trans involv. - HIGH SI contirb "
df.out <- rbind(df.out,  ccc)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
#############################################
# --- low motivation -
low_mot_df <- int_data[int_data$motivation.welfare. <= 3, ]
low_mot_df <- low_mot_df[!is.na(low_mot_df$id),]
write.csv(low_mot_df, "low_mot_df.csv")
low_mot_high_imp <- low_mot_df[ low_mot_df$Impactstatements.capab. >= 7 |
low_mot_df$Impactstatements.emanc. >= 7 |
low_mot_df$Impactstatements.understanding. >= 7   , ]
#-------------------------------------------------- -1
low_mot_high_imp$reasoning <- "Low motivation to improve human condition - high impact statement on emancipation/ capability/ understanding"
df.out <- rbind(df.out,  low_mot_high_imp)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
nrow(df.out)
# --- Low fam SI - High Social Impact
low_fam <- int_data[int_data$familiarWithSI.response. <= 3, ]
write.csv(low_fam, "low_fam.csv")
low_fam_high_imp <- low_fam[(low_fam$Impactstatements.emanc. >= 7 |
low_fam$Impactstatements.mitig. >= 7 |
low_fam$Impactstatements.capab. >= 7
),
]
sum(!is.na(low_fam_high_imp$id))
#-------------------------------------------------- -1
low_fam_high_imp$reasoning <- "Low SI familiarity - - high impact statement on emancipation/ capability/ understanding"
df.out <- rbind(df.out,  low_fam_high_imp)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
nrow(df.out)
#++++++++++++++++++++++++++++++++++++++++++++++++
#++++++++++++++++++++++++++++++++++++++++++++++++
# --- High SI Knowledge low contribution to SI
df.familiar_SI <- int_data[int_data$familiarWithSI.response. >= 7, ]
nrow(df.familiar_SI)
df.familiar_SI_low_contrib <- df.familiar_SI[df.familiar_SI$contribToSI.rate. < 3, ][c(4,5),]
df.familiar_SI_low_contrib$reasoning <- "High SI familiarity - Low SI contribution"
#--------------------------------------------------1
df.out <- rbind(df.out, df.familiar_SI_low_contrib)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
# Remove the selected ones
# --- High Motivation - Low public outcome
df.high_mot <- int_data[int_data$motivation.welfare. > 7, ]
# low public impact
df.high_mot_low_pubImpact <- df.high_mot[df.high_mot$impactTargetGroup.pub. <= 3 &
df.high_mot$impactTargetGroup.socgr. <= 3 &
df.high_mot$impactTargetGroup.welfare. <= 3 &
df.high_mot$impactTargetGroup.busi. <= 3 &
df.high_mot$impactTargetGroup.civsoc. <= 3 &
df.high_mot$impactTargetGroup.policy. <= 3
, ]
nrow(df.high_mot_low_pubImpact)
#-------------------------------------------------- 2
df.high_mot_low_pubImpact$reasoning <- "High mot. to imp. human condition - Low impact (all cat. except academia)"
df.out <- rbind(df.out,  df.high_mot_low_pubImpact)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
# --- Transdisciplinary involvment - low public impact
df.high_trans_low_pubImpact <- int_data[int_data$groupsInvolved.citiz. == 2 &
#int_data$Impactstatements.emanc. <=3
int_data$impactTargetGroup.pub. <=3
, ]
df.high_trans_low_pubImpact$reasoning <- "Transdisciplinary Involvement - Low public impact"
df.out <- rbind(df.out,  df.high_trans_low_pubImpact)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
# --- Impulse from academic world: a societal problem - Low social impact
df.high_impuls_low_socImpact <- int_data[int_data$impulseForNonAcad.soc. == "Y" &
int_data$Impactstatements.capab. <= 3 &
int_data$Impactstatements.emanc. <= 3 &
int_data$impactTargetGroup.pub. <= 3 &
int_data$Impactstatements.mitig. <= 3
, ]
#-------------------------------------------------- 3
df.high_impuls_low_socImpact$reasoning <- "Impulse from a societal problem - Low social impact"
df.out <- rbind(df.out,  df.high_impuls_low_socImpact)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
# --- Obvious cases
bbb <- int_data[int_data$contribToSI.rate. >= 7, ]
#-------------------------------------------------- 3
bbb$reasoning <- "(Obvious Cases) High SI familiarity"
df.out <- rbind(df.out,  bbb)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
aaa <- int_data[int_data$familiarWithSI.response. >= 7, ]
aaa[aaa$motivation.welfare. >= 7, ]
ncol( bbb)
#-------------------------------------------------- 3
aaa$reasoning <- "(Obvious Cases) High SI Familiarity"
df.out <- rbind(df.out,  aaa)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
nrow(df.out)
# --- Low trans
ddd <- int_data[int_data$targetGroupsGoals.empower. == 1 &
int_data$targetGroupsGoals.improve. == 1 &
int_data$Impactstatements.emanc. <=3 &
int_data$Impactstatements.mitig. <=3
, ]
sum(!is.na(ddd$id))
#############################################
# --- Overall high scored respondents
high_contrib_df <- int_data[int_data$contribToSI.rate. > 7, ]
high_contrib_df <- high_contrib_df[!is.na(high_contrib_df$id),]
#-------------------------------------------------- -1
high_contrib_df$reasoning <- "Overall high SI stats"
df.out <- rbind(df.out,  high_contrib_df)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
#############################################
# --- high motivation - caused behaviour change
high_mot_df <- int_data[int_data$motivation.welfare. > 7, ]
high_mot_df <- high_mot_df[!is.na(high_mot_df$id),]
write.csv(high_mot_df, "high_mot_df.csv")
high_mot_beh_df <- high_mot_df[high_mot_df$kindOfChange.pub. == "beh" |
high_mot_df$kindOfChange.policy. == "beh" |
high_mot_df$kindOfChange.socgr. == "beh" |
high_mot_df$kindOfChange.welfare. == "beh" |
high_mot_df$kindOfChange.civsoc. == "beh", ]
#-------------------------------------------------- -1
high_mot_beh_df$reasoning <- "High motivation to imp. human condition + changed behaviour (public, policy, civil society orgs)"
df.out <- rbind(df.out,  high_mot_beh_df)
rownames(df.out) <- 1:nrow(df.out)
int_data <- rm_ids(int_data, df.out)
rownames(int_data) <- 1:nrow(int_data)
df.out <- df.out[!is.na(df.out$id), ]
nrow(df.out)
df.out <- df.out[, c(1:5, 154, 6:153)]
write.csv(df.out, "deneme_batch2.csv")
nrow(int_data)
#--- Perfect cases
int_data$motivation.welfare. >= 7
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7, na.rm = T)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7 & int_data$groupsInvolved.citiz. >= 1, na.rm = T)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7 & int_data$groupsInvolved.citiz. >= 1 & int_data$contribToSI.rate. >= 7, na.rm = T)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7 & int_data$contribToSI.rate. >= 7, na.rm = T)
#--- Perfect cases
sum(int_data$contribToSI.rate. >= 7, na.rm = T)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7 & int_data$groupsInvolved.citiz. >= 1 & int_data$familiarWithSI.response. >= 7, na.rm = T)
#--- Perfect cases
sum(int_data$motivation.welfare. >= 7 & int_data$groupsInvolved.citiz. >= 1 & int_data$impactTargetGroup.welfare. >= 7, na.rm = T)
#--- Perfect cases
int_data[int_data$motivation.welfare. >= 7 & int_data$groupsInvolved.citiz. >= 1 & int_data$impactTargetGroup.welfare. >= 7,]
library(readxl)
cand_df <- as.data.frame(read_excel("./deneme_batch2_edited.xlsx"))
collab_df <- read.csv("./5555_preliminary_analysis/00_data/P3_CollaborationExport.csv", sep=";")
grant_df <- read.csv("./5555_preliminary_analysis/00_data/P3_GrantExport_with_abstracts.csv", sep=";")
output_df <- read.csv("./5555_preliminary_analysis/00_data/P3_GrantOutputDataExport.csv", sep=";")
person_df <- read.csv("./5555_preliminary_analysis/00_data/P3_PersonExport.csv", sep=";")
pub_df <- read.csv("./5555_preliminary_analysis/00_data/P3_PublicationExport.csv", sep=";")
projID <- cand_df$projID
persID <- cand_df$persID
# All columns from collab_df
match_collab_df <- collab_df[match(projID, collab_df$Project.Number), ]
match_collab_df <- match_collab_df[, c(3:ncol(match_collab_df))]
# Add URLs
url_base <- "https://survey3.zsi.at/index.php/admin/responses/sa/view/surveyid/718586/id/"
url_col <- paste0(url_base, cand_df$id)
# Frant Export
match_grant_df <- grant_df[match(projID, grant_df$Project.Number), ]
match_grant_df <- match_grant_df[, c(1, 3, 5, 8:10, 12, 13, 15, 16, 18, 19)]
match_grant_df <- match_grant_df[, c(4:8, 11:12)]
# Output
match_output_df <- output_df[match(projID, output_df$Project.Number), ]
# Person
match_person_df <- person_df[match(persID, person_df$Person.ID.SNSF), ]
match_person_df <- match_person_df[, 4:7]
# Publication
match_pub_df <- pub_df[match(projID, pub_df$Project.Number), ]
match_pub_df <- match_pub_df[, c(3:10, 15:17, 19:26)]
colnames(match_output_df)
colnames(match_person_df)
head(match_person_df)
# Adjust candidate df
cand_df$name <- paste(cand_df$firstname, cand_df$lastname)
colnames(cand_df)
cand_df_reord <- cand_df[, c(1, 156, 141, 142,145,  143, 144, 146, 147, 148, 151, 149, 6, 7,
13:97)]
out_df <- as.data.frame(cbind(cand_df_reord[, 1:13],
url_col,
match_grant_df,
match_person_df,
match_collab_df,
match_pub_df,
match_output_df,
cand_df_reord[, 14:ncol(cand_df_reord)]))
colnames(out_df)[27] <- "Collaboration.Country"
colnames(out_df)[13] <- "cluster"
colnames(out_df)[14] <- "survey.URL"
colnames(out_df)[48] <- "Journal.Abstract"
colnames(out_df)[52] <- "Output.URL"
colnames(out_df)[53] <- "Output.Year"
colnames(out_df)
out_df <- out_df[, c(2:13, 54, 14:17, 20, 21, 24:53, 55:(ncol(out_df))-1)]
write.csv(out_df, "batch2.1.csv")
saveRDS(out_df, "batch2.1.RDS")
table(out_df$gender)
12/(29+12)
