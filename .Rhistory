natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
model_miro_1 <-"
motivation_change =~ motivation.welfare.+
benefitForNonAcademy+
kindOfChange.pub.+
kindOfChange.busi.+
kindOfChange.socgr.+
kindOfChange.welfare.+
kindOfChange.civsoc.+
kindOfChange.policy.
motivation_impulse =~
impulseForNonAcad.econ.+
impulseForNonAcad.ecol.+
impulseForNonAcad.health.+
impulseForNonAcad.tech.
transdisciplinary_involvement =~ groupsInvolved.busi.+
groupsInvolved.civsoc.+
groupsInvolved.policy.+
groupsInvolved.citiz.+
groupsInvolved.media.+
groupsInvolved.welfare.+
natureOfInvolvement.res.+
natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
model_miro_1 <-"
motivation_change =~ motivation.welfare.+
benefitForNonAcademy+
kindOfChange.pub.+
kindOfChange.busi.+
kindOfChange.socgr.+
kindOfChange.welfare.+
kindOfChange.civsoc.+
kindOfChange.policy.
motivation_impulse =~
impulseForNonAcad.ecol.+
impulseForNonAcad.health.+
impulseForNonAcad.tech.
transdisciplinary_involvement =~ groupsInvolved.busi.+
groupsInvolved.civsoc.+
groupsInvolved.policy.+
groupsInvolved.citiz.+
groupsInvolved.media.+
groupsInvolved.welfare.+
natureOfInvolvement.res.+
natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
model_miro_1 <-"
motivation_change =~ motivation.welfare.+
benefitForNonAcademy+
kindOfChange.pub.+
kindOfChange.busi.+
kindOfChange.socgr.+
kindOfChange.welfare.+
kindOfChange.civsoc.+
kindOfChange.policy.
motivation_impulse =~
impulseForNonAcad.health.+
impulseForNonAcad.tech.
transdisciplinary_involvement =~ groupsInvolved.busi.+
groupsInvolved.civsoc.+
groupsInvolved.policy.+
groupsInvolved.citiz.+
groupsInvolved.media.+
groupsInvolved.welfare.+
natureOfInvolvement.res.+
natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
model_miro_1 <-"
motivation_change =~ motivation.welfare.+
benefitForNonAcademy+
kindOfChange.pub.+
kindOfChange.busi.+
kindOfChange.socgr.+
kindOfChange.welfare.+
kindOfChange.civsoc.+
kindOfChange.policy.
motivation_impulse =~
impulseForNonAcad.health.
transdisciplinary_involvement =~ groupsInvolved.busi.+
groupsInvolved.civsoc.+
groupsInvolved.policy.+
groupsInvolved.citiz.+
groupsInvolved.media.+
groupsInvolved.welfare.+
natureOfInvolvement.res.+
natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
model_miro_1 <-"
motivation_change =~ motivation.welfare.+
benefitForNonAcademy+
kindOfChange.pub.+
kindOfChange.busi.+
kindOfChange.socgr.+
kindOfChange.welfare.+
kindOfChange.civsoc.+
kindOfChange.policy.
motivation_impulse =~
impulseForNonAcad.health.
transdisciplinary_involvement =~ groupsInvolved.busi.+
groupsInvolved.civsoc.+
groupsInvolved.policy.+
groupsInvolved.citiz.+
groupsInvolved.media.+
groupsInvolved.welfare.+
natureOfInvolvement.res.+
natureOfInvolvement.busi.+
natureOfInvolvement.civsoc.+
natureOfInvolvement.policy.+
natureOfInvolvement.citiz.+
natureOfInvolvement.media.+
natureOfInvolvement.welfare.+
targetGroupsGoals.diversity.
transdisciplinary_goals =~
targetGroupsGoals.socneeds.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
targetGroupsGoals.diversity.
outcomes =~ impactTargetGroup.pub.+
impactTargetGroup.busi.+
impactTargetGroup.socgr.+
impactTargetGroup.welfare.+
impactTargetGroup.civsoc.+
impactTargetGroup.policy.+
Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
Impactstatements.unaddressed.
"
df_model <- as.data.frame(df_model)
df_model$impulseForNonAcad.health.
fit.model_miro <- cfa(model_miro_1, data = df_model, estimator = "MLR", mimic = "Mplus")
summary(fit.model_miro, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
source("./07_model_new/07_metadata_SI-index_relations.R")
colnames(df_model)
df_model2 <- feat_df.num_o %>%
dplyr::select(-all_of(c(
factor_1
, "contribToSI.rate."
, "motivation.pheno."
, "scalabilityRating.deep."
, "groupsInvolved.res."
, "impactTargetGroup.acad."
, "kindOfChange.acad."
, "concepts.pub."
, "concepts.data."
, "concepts.code."
, "concepts.infra."
, "concepts.review."
, "concepts2"
, "concepts3"
)))
ncol(df_model)
ncol(df_model2)
source("./07_model_new/07_metadata_SI-index_relations.R")
fit.miro_model <- cfa(miro_model, data = df_model2, estimator = "MLR", mimic = "Mplus")
source("./07_model_new/07_metadata_SI-index_relations.R")
source("./07_model_new/07_metadata_SI-index_relations.R")
source("./07_model_new/06_multinomial_logit_regression.R")
source("./07_model_new/05_logit_model.R")
source("./07_model_new/02_efa_model.R")
library(semPlot)
library(lavaan)
library(psych)
# CFA Models
#-------------------------------------------------------------------------------
cfa_five <-
# Intention
"
a =~motivation.welfare.+
benefitForNonAcademy+
targetGroupsGoals.improve.+
targetGroupsGoals.empower.+
impulseForNonAcad.soc.+
targetGroupsGoals.socgroups.+
targetGroupsGoals.socneeds.+
targetGroupsGoals.empower.+
impulseForNonAcad.health.+
targetGroupsGoals.diversity.
## Intention-other
b =~ motivation.prob.+
impulseForNonAcad.ecol.+
impulseForNonAcad.tech.+
impulseForNonAcad.econ.
# Actors
c =~ groupsInvolved.citiz.+
natureOfInvolvement.citiz.+
groupsInvolved.welfare.+
groupsInvolved.civsoc.+
natureOfInvolvement.civsoc.+
kindOfChange.civsoc.
d =~ kindOfChange.policy.+
kindOfChange.pub.+
kindOfChange.socgr.+
kindOfChange.welfare.
e =~ Impactstatements.capab.+
Impactstatements.emanc.+
Impactstatements.understanding.+
Impactstatements.mitig.+
Impactstatements.unknown.+
impactTargetGroup.socgr.+
impactTargetGroup.policy.+
impactTargetGroup.civsoc.
"
model_theory2 <-"
# SOLUTION ORIENTATION
ia_human_condition =~
motivation.welfare.+
benefitForNonAcademy+
impulseForNonAcad.soc.+
targetGroupsGoals.improve.
ia_other_nonacad_impulse =~
impulseForNonAcad.econ.+
impulseForNonAcad.ecol.+
impulseForNonAcad.health.+
impulseForNonAcad.tech.
#  ACTORS & NETWORKS
transdisciplinary_involvement =~
groupsInvolved.citiz. +
groupsInvolved.civsoc. +
groupsInvolved.welfare. +
natureOfInvolvement.citiz. +
natureOfInvolvement.civsoc. +
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds. +
targetGroupsGoals.socgroups. +
targetGroupsGoals.empower. +
targetGroupsGoals.diversity.
# NOVELTY
innovativeness =~
kindOfChange.pub. +
kindOfChange.socgr. +
kindOfChange.welfare. +
kindOfChange.civsoc.
# OUTCOME
outcomes =~
impactTargetGroup.pub. +
impactTargetGroup.socgr. +
impactTargetGroup.welfare. +
impactTargetGroup.civsoc. +
Impactstatements.capab. +
Impactstatements.emanc. +
Impactstatements.understanding. +
Impactstatements.mitig. +
Impactstatements.unknown. +
Impactstatements.unaddressed.
# MISC:policy
policy =~ groupsInvolved.policy.+impactTargetGroup.policy.+kindOfChange.policy.+natureOfInvolvement.policy.+groupsInvolved.policy.+adoptByPolicyHow.SQ001."
model_theory3 <-"
# SOLUTION ORIENTATION
ia_human_condition =~
motivation.welfare.+
benefitForNonAcademy+
targetGroupsGoals.improve.
#  ACTORS & NETWORKS
transdisciplinary_involvement =~
groupsInvolved.citiz. +
groupsInvolved.civsoc. +
groupsInvolved.welfare. +
groupsInvolved.policy.+
natureOfInvolvement.citiz. +
natureOfInvolvement.civsoc. +
natureOfInvolvement.policy.+
natureOfInvolvement.welfare.
transdisciplinary_goals =~
targetGroupsGoals.socneeds. +
targetGroupsGoals.socgroups. +
targetGroupsGoals.empower. +
targetGroupsGoals.diversity.
# NOVELTY
innovativeness =~
kindOfChange.pub. +
kindOfChange.socgr. +
kindOfChange.policy.+
kindOfChange.welfare.
# OUTCOME
outcomes =~
impactTargetGroup.pub. +
impactTargetGroup.socgr. +
impactTargetGroup.welfare. +
impactTargetGroup.civsoc. +
impactTargetGroup.policy.+
Impactstatements.capab. +
Impactstatements.emanc. +
Impactstatements.understanding. +
Impactstatements.mitig. +
Impactstatements.unknown. +
Impactstatements.unaddressed.
"
model_theory3.strict <-"
# SOLUTION ORIENTATION
ia_human_condition =~
motivation.welfare.+
benefitForNonAcademy+
targetGroupsGoals.improve.
#  ACTORS & NETWORKS
transdisciplinary_involvement =~
groupsInvolved.citiz.+
groupsInvolved.civsoc.+
natureOfInvolvement.citiz.+
natureOfInvolvement.civsoc.
transdisciplinary_goals =~
targetGroupsGoals.socneeds. +
targetGroupsGoals.socgroups. +
targetGroupsGoals.empower. +
targetGroupsGoals.diversity.
# NOVELTY
innovativeness =~
kindOfChange.pub. +
kindOfChange.socgr. +
kindOfChange.policy.+
kindOfChange.welfare.
# OUTCOME
outcomes =~
impactTargetGroup.pub. +
impactTargetGroup.socgr. +
impactTargetGroup.civsoc. +
impactTargetGroup.policy.+
Impactstatements.capab. +
Impactstatements.emanc. +
Impactstatements.understanding. +
Impactstatements.mitig.
"
model_theory4 <-"
# SOLUTION ORIENTATION
ia_human_condition =~
motivation.welfare.+
benefitForNonAcademy+
targetGroupsGoals.improve.
#  ACTORS & NETWORKS
transdisciplinary_involvement =~
groupsInvolved.citiz.+
groupsInvolved.civsoc.+
natureOfInvolvement.citiz.+
natureOfInvolvement.civsoc.
transdisciplinary_goals =~
targetGroupsGoals.socneeds. +
targetGroupsGoals.socgroups. +
targetGroupsGoals.empower. +
targetGroupsGoals.diversity.+
kindOfChange.socgr.
# OUTCOME
outcomes =~
impactTargetGroup.pub. +
impactTargetGroup.socgr. +
impactTargetGroup.civsoc. +
impactTargetGroup.policy.+
Impactstatements.capab. +
Impactstatements.emanc. +
Impactstatements.understanding. +
Impactstatements.mitig.
"
# Scale also df_model
df_model <- na.omit(df_model)
df_model.no_scale <- df_model
df_model <- sapply(FUN=scales::rescale, df_model, c(0, 10))
fit.model2 <- cfa(model_theory3, data = df_model, estimator = "MLR", mimic = "Mplus")
fit.model3.strict <- cfa(model_theory3.strict, data = df_model, estimator = "MLR", mimic = "Mplus")
fit.model4 <- cfa(model_theory4, data = df_model, estimator = "MLR", mimic = "Mplus")
fit.model5 <- cfa(cfa_five, data = df_model, estimator = "MLR", mimic = "Mplus")
# MLR because our data is not normally distributed
semPaths(semPlotModel(fit.model2), rotation = 2)
# Factor loadings should be > 0.7, remove everything below 0.6 (it is Std.all)
# CFI, TLI > 0.9
# RMSEA, SRMR < 0.08
summary(fit.model2, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
summary(fit.model3.strict, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
summary(fit.model4, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
summary(fit.model5, fit.measures = T, standardized = T, rsq = T)  # Not a good fit
# For this time, we are choosing fit.model_strict
pred <- predict(fit.model2)
ulimit -s
source("./07_model_new/07_metadata_SI-index_relations.R")
