df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
table(df_ult$discipline)
# Remove those from the main df
data <- data[!(data$id %in% df_ult$id),]
# Consider: Human Condition
hc.sum <- summary(data$motivation.welfare.)
hc.high_range <- hc.sum["3rd Qu."] : hc.sum["Max."]
hc.high_ind <- which(data$motivation.welfare. %in% hc.high_range)
df_high_hc <- data[hc.high_ind, ]
summary(df_high_hc$contribToSI.rate.)
df_high_hc.cit <- df_high_hc %>% filter(groupsInvolved.citiz. > 0)
cbind(df_high_hc.cit$id, df_high_hc.cit$discipline, df_high_hc.cit$title)
c(35, 49, 70, 129, 131, 146, )
df_high_hc.civsoc <- df_high_hc %>% filter(impactTargetGroup.civsoc. > 3)
cbind(df_high_hc.civsoc$discipline, df_high_hc.civsoc$title)
data[data$id == 216,]
(data)
## data_num <- data[,1:99] %>% dplyr::select(where(is.numeric))
## data_num[is.na(data_num)] <- 0
##
## factanal(data_num, 3, rotation="varimax")
## princomp(data_num, cor=TRUE)
##
## library(corrplot)
## corrplot(data_num, type = "upper", order = "hclust",
##         tl.col = "black", tl.srt = 45)
##
## library("PerformanceAnalytics")
## chart.Correlation(data_num[,1:10], histogram=TRUE, pch=19)
## colnames(data_num)
##
dim(df_ult)
# Unsatisfactory representation
data_fem <- data[data$gender == "female", ]
data_fem.si <- data_fem[which(data_fem$contribToSI.rate. > summary(data_fem$contribToSI.rate.)["Median"]), ]
df_ult <- rbind(df_ult, data_fem.si)
dim(df_ult)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
dim(df_ult)
table(df_ult$gender)
data <- data[!(data$id == data_fem.si), ]
dim(data)
library(dplyr)
library(ggplot2)
source("./02_analysis/02_static_responses.R")
colnames(data)[142:ncol(data)] <- c("persID",
"gender",
"projID",
"title",
"discipline",
"funding",
"runtime"
)
stem.fields <- c("Astronomy, Astrophysics and Space Sciences",
"Biophysic",
"Experimental Microbiology",
"Geochemistry",
"Information Technology",
"Medical Microbiology",
"Neurophysiology and Brain Research",
"Organic Chemistry",
"Technical Physics")
## ggplot(data=data, aes(x=contribToSI.rate., y=transdisciplinaryExp.rate.))+
##   geom_point()+
##   geom_smooth(method="lm") +
##   geom_text(aes(label=id))
si.sum <- summary(as.numeric(data$contribToSI.rate.))
si.sum
si.high_range <- si.sum["3rd Qu."] : si.sum["Max."]
si.high_ind <- which(data$contribToSI.rate. %in% si.high_range)
df_high_si <- data[si.high_ind, ] # 34 Obs | 28m 6f
# Obvious cases show great distribution of disciplines
# Ultimate df to collect them all
# 1. Add obvious cases with high self SI asses.
df_ult <- df_high_si
td.sum <- summary(data$transdisciplinaryExp.rate.)
td.high_range <- td.sum["3rd Qu."] : td.sum["Max."]
td.high_ind <- which(data$transdisciplinaryExp.rate. %in% td.high_range)
df_high_td <- data[td.high_ind,]
dim(df_high_td)
table(df_high_si$discipline)
# examine stem disc.
df_high_td.stem <- df_high_td[which(df_high_td$discipline %in% stem.fields), ]
# high trans. exp. and high self si asses.
temp_ind <- which(df_high_td.stem$contribToSI.rate. %in%
round(summary(df_high_td.stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.stem$contribToSI.rate.)["Max."])
df_high_td.stem.si <- df_high_td.stem[temp_ind, ] # 7 Obs, 7m
# Females of high trans. and stem ?
df_high_td.stem.fe <- df_high_td.stem %>% filter(gender == "female") %>% filter(contribToSI.rate. >= summary(contribToSI.rate.)["1st Qu."])
# examine further disc.
df_high_td.not_stem <- df_high_td[which(!(df_high_td$discipline %in% stem.fields)), ]
temp_ind <- which(df_high_td.not_stem$contribToSI.rate. %in%
round(summary(df_high_td.not_stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.not_stem$contribToSI.rate.)["Max."])
df_high_td.not_stem.si <- df_high_td.not_stem[temp_ind,]
df_high_td.not_stem.si
table(df_high_td.stem$contribToSI.rate.)
# 2. Add the cases with high transdisciplinarity exp.
# and high self SI asses.
df_ult <- rbind(df_ult, df_high_td.stem.si)
df_ult <- rbind(df_ult, df_high_td.stem.fe)
df_ult <- rbind(df_ult, df_high_td.not_stem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
table(df_ult$discipline)
# Remove those from the main df
data <- data[!(data$id %in% df_ult$id),]
# Consider: Human Condition
hc.sum <- summary(data$motivation.welfare.)
hc.high_range <- hc.sum["3rd Qu."] : hc.sum["Max."]
hc.high_ind <- which(data$motivation.welfare. %in% hc.high_range)
df_high_hc <- data[hc.high_ind, ]
summary(df_high_hc$contribToSI.rate.)
df_high_hc.cit <- df_high_hc %>% filter(groupsInvolved.citiz. > 0)
cbind(df_high_hc.cit$id, df_high_hc.cit$discipline, df_high_hc.cit$title)
c(35, 49, 70, 129, 131, 146, )
df_high_hc.civsoc <- df_high_hc %>% filter(impactTargetGroup.civsoc. > 3)
cbind(df_high_hc.civsoc$discipline, df_high_hc.civsoc$title)
data[data$id == 216,]
(data)
## data_num <- data[,1:99] %>% dplyr::select(where(is.numeric))
## data_num[is.na(data_num)] <- 0
##
## factanal(data_num, 3, rotation="varimax")
## princomp(data_num, cor=TRUE)
##
## library(corrplot)
## corrplot(data_num, type = "upper", order = "hclust",
##         tl.col = "black", tl.srt = 45)
##
## library("PerformanceAnalytics")
## chart.Correlation(data_num[,1:10], histogram=TRUE, pch=19)
## colnames(data_num)
##
dim(df_ult)
# Unsatisfactory representation
data_fem <- data[data$gender == "female", ]
data_fem.si <- data_fem[which(data_fem$contribToSI.rate. > summary(data_fem$contribToSI.rate.)["Median"]), ]
df_ult <- rbind(df_ult, data_fem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
data <- data[!(data$id == data_fem.si$id), ]
dim(data)
library(dplyr)
library(ggplot2)
source("./02_analysis/02_static_responses.R")
dim(data)
library(dplyr)
library(ggplot2)
source("./02_analysis/02_static_responses.R")
colnames(data)[142:ncol(data)] <- c("persID",
"gender",
"projID",
"title",
"discipline",
"funding",
"runtime"
)
stem.fields <- c("Astronomy, Astrophysics and Space Sciences",
"Biophysic",
"Experimental Microbiology",
"Geochemistry",
"Information Technology",
"Medical Microbiology",
"Neurophysiology and Brain Research",
"Organic Chemistry",
"Technical Physics")
## ggplot(data=data, aes(x=contribToSI.rate., y=transdisciplinaryExp.rate.))+
##   geom_point()+
##   geom_smooth(method="lm") +
##   geom_text(aes(label=id))
si.sum <- summary(as.numeric(data$contribToSI.rate.))
si.sum
si.high_range <- si.sum["3rd Qu."] : si.sum["Max."]
si.high_ind <- which(data$contribToSI.rate. %in% si.high_range)
df_high_si <- data[si.high_ind, ] # 34 Obs | 28m 6f
# Obvious cases show great distribution of disciplines
# Ultimate df to collect them all
# 1. Add obvious cases with high self SI asses.
df_ult <- df_high_si
td.sum <- summary(data$transdisciplinaryExp.rate.)
td.high_range <- td.sum["3rd Qu."] : td.sum["Max."]
td.high_ind <- which(data$transdisciplinaryExp.rate. %in% td.high_range)
df_high_td <- data[td.high_ind,]
dim(df_high_td)
table(df_high_si$discipline)
# examine stem disc.
df_high_td.stem <- df_high_td[which(df_high_td$discipline %in% stem.fields), ]
# high trans. exp. and high self si asses.
temp_ind <- which(df_high_td.stem$contribToSI.rate. %in%
round(summary(df_high_td.stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.stem$contribToSI.rate.)["Max."])
df_high_td.stem.si <- df_high_td.stem[temp_ind, ] # 7 Obs, 7m
# Females of high trans. and stem ?
df_high_td.stem.fe <- df_high_td.stem %>% filter(gender == "female") %>% filter(contribToSI.rate. >= summary(contribToSI.rate.)["1st Qu."])
# examine further disc.
df_high_td.not_stem <- df_high_td[which(!(df_high_td$discipline %in% stem.fields)), ]
temp_ind <- which(df_high_td.not_stem$contribToSI.rate. %in%
round(summary(df_high_td.not_stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.not_stem$contribToSI.rate.)["Max."])
df_high_td.not_stem.si <- df_high_td.not_stem[temp_ind,]
df_high_td.not_stem.si
table(df_high_td.stem$contribToSI.rate.)
# 2. Add the cases with high transdisciplinarity exp.
# and high self SI asses.
df_ult <- rbind(df_ult, df_high_td.stem.si)
df_ult <- rbind(df_ult, df_high_td.stem.fe)
df_ult <- rbind(df_ult, df_high_td.not_stem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
table(df_ult$discipline)
# Remove those from the main df
data <- data[!(data$id %in% df_ult$id),]
# Consider: Human Condition
hc.sum <- summary(data$motivation.welfare.)
hc.high_range <- hc.sum["3rd Qu."] : hc.sum["Max."]
hc.high_ind <- which(data$motivation.welfare. %in% hc.high_range)
df_high_hc <- data[hc.high_ind, ]
summary(df_high_hc$contribToSI.rate.)
df_high_hc.cit <- df_high_hc %>% filter(groupsInvolved.citiz. > 0)
cbind(df_high_hc.cit$id, df_high_hc.cit$discipline, df_high_hc.cit$title)
c(35, 49, 70, 129, 131, 146, )
df_high_hc.civsoc <- df_high_hc %>% filter(impactTargetGroup.civsoc. > 3)
cbind(df_high_hc.civsoc$discipline, df_high_hc.civsoc$title)
data[data$id == 216,]
(data)
## data_num <- data[,1:99] %>% dplyr::select(where(is.numeric))
## data_num[is.na(data_num)] <- 0
##
## factanal(data_num, 3, rotation="varimax")
## princomp(data_num, cor=TRUE)
##
## library(corrplot)
## corrplot(data_num, type = "upper", order = "hclust",
##         tl.col = "black", tl.srt = 45)
##
## library("PerformanceAnalytics")
## chart.Correlation(data_num[,1:10], histogram=TRUE, pch=19)
## colnames(data_num)
##
dim(df_ult)
# Unsatisfactory representation
data_fem <- data[data$gender == "female", ]
data_fem.si <- data_fem[which(data_fem$contribToSI.rate. > summary(data_fem$contribToSI.rate.)["Median"]), ]
df_ult <- rbind(df_ult, data_fem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
data <- data[!(data$id == data_fem.si$id), ]
dim(data)
dim(df_ult)
colnames(data)
data$natureOfInvolvement.citiz.
data$familiarWithSI.response.
fsi.sum <- summary(data$familiarWithSI.response.)
fsi.sum
fsi.sum["3rd Qu."] : fsi.sum["Max."]
data[data$familiarWithSI.response. %in% fsi.sum["3rd Qu."] : fsi.sum["Max."],]
df_high_fsi <- data[data$familiarWithSI.response. %in% fsi.sum["3rd Qu."] : fsi.sum["Max."],]
df_high_fsi$contribToSI.rate.
df_high_fsi <- data[data$familiarWithSI.response. %in% fsi.sum["3rd Qu."]+2 : fsi.sum["Max."],]
df_high_fsi <- data[data$familiarWithSI.response. %in% (fsi.sum["3rd Qu."]+2) : fsi.sum["Max."],]
df_high_fsi
dim(df_high_fsi)
df_high_fsi$feedback
df_high_fsi[31]
df_high_fsi[31,]
df_high_fsi$feedback
df_high_fsi[27,]
df_high_fsi$feedback
df_high_fsi$feedback
df_high_fsi[20,]
df_high_fsi$feedback
df_high_fsi[4,]
df_high_fsi$feedback
# Find relevant feedbacks in the cluster of high SI familiarity without the necessity of SI cont.
df_high_fsi[c(1, 4, 20, 27, 31),]
# Find relevant feedbacks in the cluster of high SI familiarity without the necessity of SI cont.
df_high_fsi.feedback <- df_high_fsi[c(1, 4, 20, 27, 31),]
table(df_high_fsi.feedback$gender)
df_high_fsi <- df_high_fsi[!c(1, 4, 20, 27, 31), ]
df_high_fsi
!c(1, 4, 20, 27, 31)
library(dplyr)
library(ggplot2)
source("./02_analysis/02_static_responses.R")
colnames(data)[142:ncol(data)] <- c("persID",
"gender",
"projID",
"title",
"discipline",
"funding",
"runtime"
)
stem.fields <- c("Astronomy, Astrophysics and Space Sciences",
"Biophysic",
"Experimental Microbiology",
"Geochemistry",
"Information Technology",
"Medical Microbiology",
"Neurophysiology and Brain Research",
"Organic Chemistry",
"Technical Physics")
## ggplot(data=data, aes(x=contribToSI.rate., y=transdisciplinaryExp.rate.))+
##   geom_point()+
##   geom_smooth(method="lm") +
##   geom_text(aes(label=id))
si.sum <- summary(as.numeric(data$contribToSI.rate.))
si.sum
si.high_range <- si.sum["3rd Qu."] : si.sum["Max."]
si.high_ind <- which(data$contribToSI.rate. %in% si.high_range)
df_high_si <- data[si.high_ind, ] # 34 Obs | 28m 6f
# Obvious cases show great distribution of disciplines
# Ultimate df to collect them all
# 1. Add obvious cases with high self SI asses.
df_ult <- df_high_si
td.sum <- summary(data$transdisciplinaryExp.rate.)
td.high_range <- td.sum["3rd Qu."] : td.sum["Max."]
td.high_ind <- which(data$transdisciplinaryExp.rate. %in% td.high_range)
df_high_td <- data[td.high_ind,]
dim(df_high_td)
table(df_high_si$discipline)
# examine stem disc.
df_high_td.stem <- df_high_td[which(df_high_td$discipline %in% stem.fields), ]
# high trans. exp. and high self si asses.
temp_ind <- which(df_high_td.stem$contribToSI.rate. %in%
round(summary(df_high_td.stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.stem$contribToSI.rate.)["Max."])
df_high_td.stem.si <- df_high_td.stem[temp_ind, ] # 7 Obs, 7m
# Females of high trans. and stem ?
df_high_td.stem.fe <- df_high_td.stem %>% filter(gender == "female") %>% filter(contribToSI.rate. >= summary(contribToSI.rate.)["1st Qu."])
# examine further disc.
df_high_td.not_stem <- df_high_td[which(!(df_high_td$discipline %in% stem.fields)), ]
temp_ind <- which(df_high_td.not_stem$contribToSI.rate. %in%
round(summary(df_high_td.not_stem$contribToSI.rate.)["Mean"]) : summary(df_high_td.not_stem$contribToSI.rate.)["Max."])
df_high_td.not_stem.si <- df_high_td.not_stem[temp_ind,]
df_high_td.not_stem.si
table(df_high_td.stem$contribToSI.rate.)
# 2. Add the cases with high transdisciplinarity exp.
# and high self SI asses.
df_ult <- rbind(df_ult, df_high_td.stem.si)
df_ult <- rbind(df_ult, df_high_td.stem.fe)
df_ult <- rbind(df_ult, df_high_td.not_stem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
table(df_ult$discipline)
# Remove those from the main df
data <- data[!(data$id %in% df_ult$id),]
# Consider: Human Condition
hc.sum <- summary(data$motivation.welfare.)
hc.high_range <- hc.sum["3rd Qu."] : hc.sum["Max."]
hc.high_ind <- which(data$motivation.welfare. %in% hc.high_range)
df_high_hc <- data[hc.high_ind, ]
summary(df_high_hc$contribToSI.rate.)
df_high_hc.cit <- df_high_hc %>% filter(groupsInvolved.citiz. > 0)
cbind(df_high_hc.cit$id, df_high_hc.cit$discipline, df_high_hc.cit$title)
c(35, 49, 70, 129, 131, 146, )
df_high_hc.civsoc <- df_high_hc %>% filter(impactTargetGroup.civsoc. > 3)
cbind(df_high_hc.civsoc$discipline, df_high_hc.civsoc$title)
data[data$id == 216,]
(data)
## data_num <- data[,1:99] %>% dplyr::select(where(is.numeric))
## data_num[is.na(data_num)] <- 0
##
## factanal(data_num, 3, rotation="varimax")
## princomp(data_num, cor=TRUE)
##
## library(corrplot)
## corrplot(data_num, type = "upper", order = "hclust",
##         tl.col = "black", tl.srt = 45)
##
## library("PerformanceAnalytics")
## chart.Correlation(data_num[,1:10], histogram=TRUE, pch=19)
## colnames(data_num)
##
dim(df_ult)
# Unsatisfactory representation
data_fem <- data[data$gender == "female", ]
data_fem.si <- data_fem[which(data_fem$contribToSI.rate. > summary(data_fem$contribToSI.rate.)["Median"]), ]
df_ult <- rbind(df_ult, data_fem.si)
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
data <- data[!(data$id == data_fem.si$id), ]
fsi.sum <- summary(data$familiarWithSI.response.)
df_high_fsi <- data[data$familiarWithSI.response. %in% (fsi.sum["3rd Qu."]+2) : fsi.sum["Max."],]
df_high_fsi$feedback
# Find relevant feedbacks in the cluster of high SI familiarity without the necessity of SI cont.
df_high_fsi.feedback <- df_high_fsi[c(1, 4, 20, 27, 31),]
df_high_fsi <- df_high_fsi[df_high_fsi$feedback == "", ]
df_high_fsi
df_high_fsi[2]
df_high_fsi[2,]
df_high_fsi[2,]$feedback
df_high_fsi
df_high_fsi.feedback$feedback
df_high_fsi[1,]
df_ult <- rbind(df_ult, df_high_fsi.feedback)
dim(df_ult)
table(df_ult$gender)
table(df_ult$gender)[1] / table(df_ult$gender)[2]
dim(df_high_fsi)
df_high_fsi$SIthroughSNSF
df_high_fsi[15,]
df_high_fsi[16,]
# A critical feedback on SI
df_ult <- rbind(df_ult, df_high_fsi[16,])
dim(df_ult)
df_high_fsi$natureOfInvolvement.citiz.
df_high_fsi$natureOfInvolvement.citiz. == "cocr"
df_high_fsi$natureOfInvolvement.citiz. == "colla"
df_high_fsi[df_high_fsi$natureOfInvolvement.citiz. == "colla",]
df_high_fsi[16,]
df_high_fsi[df_high_fsi$natureOfInvolvement.citiz. == "colla",]
table(df_ult$gender)
18/(47 + 18)
write.csv(df_ult, "SIVOCS_int-cand.csv")
colnames(df_ult)
c(139:147, 1:146, 148)
df_ult <- df_ult[,c(139:147, 1:146, 148)]
colnames(df_ult)
df_ult <- df_ult[, 1:146]
colnames(df_ult)
# Merge first name last name
paste0("asdsad", " ", "uqewoue")
df_ulti %>% apply(paste0(firstname, " ", lastname))
df_ulti %>% apply(FUN=paste0, firstname, " ", lastname)
df_ult %>% apply(FUN=paste0, firstname, " ", lastname)
apply(FUN=paste0, df_ult$firstname, " ", df_ult$lastname)
sapply(FUN=paste0, df_ult$firstname, " ", df_ult$lastname)
df_ult %>% sapply(FUN=paste0, firstname, " ", lastname)
df_ult %>% sapply(FUN=paste0, .$firstname, " ", .$lastname)
sapply(FUN=paste0, df_ult$firstname, " ", df_ult$lastname)
paste0( df_ult$firstname, " ", df_ult$lastname)
# Merge first name last name
df_ult <- cbind(paste0( df_ult$firstname, " ", df_ult$lastname), df_ult)
colnames(df_ult)
colnames(df_ult)[1]
colnames(df_ult)[1] <- "name"
write.csv(df_ult, "SIVOCS_int-cand.csv")
# Take id to the front
df_ult <- df_ult[, c(11, 1:10, 12:ncol(df_ult))]
colnames(df_ult)
head(df_ult)
row.names(df_ult)
row.names(df_ult) <- 1:nrow(df_ult)
write.csv(df_ult, "SIVOCS_int-cand.csv")
saveRDS(df_ult)
saveRDS(df_ult, "df_ult.RDS")
library(tufte)
library(ggplot2)
library(tidyr)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
df_ult <- readRDS("./df_ult.RDS")
source("./02_analysis/02_static_responses.R")
# Remove duplicates
df_ult <- df_ult[!duplicated(df_ult), ] # 52 Obs | 10f 42m
dim(df_ult)
table(df_ult$gender)
17/(17+47)
write.csv(df_ult, "SIVOCS_int-cand.csv")
saveRDS(df_ult, "df_ult.RDS")
library(tufte)
library(ggplot2)
library(tidyr)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
df_ult <- readRDS("./df_ult.RDS")
source("./02_analysis/02_static_responses.R")
# Remove duplicates
df_ult <- df_ult[!duplicated(df_ult), ] # 64
# Reset row numbers
row.names(df_ult) <- 1:nrow(df_ult)
write.csv(df_ult, "SIVOCS_int-cand.csv")
saveRDS(df_ult, "df_ult.RDS")
library(tufte)
library(ggplot2)
library(tidyr)
# invalidate cache when the tufte version changes
knitr::opts_chunk$set(cache.extra = packageVersion('tufte'))
options(htmltools.dir.version = FALSE)
df_ult <- readRDS("./df_ult.RDS")
source("./02_analysis/02_static_responses.R")
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar(xlab(unique(contribToSI.rate.))+)
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar(xlab(unique(contribToSI.rate.))
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar(xlab(unique(contribToSI.rate.)))
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar(xlab(unique(data$contribToSI.rate.)))
ggplot(data=data, aes(x=contribToSI.rate.) +
geom_bar(xlab(unique(data$contribToSI.rate.))))
ggplot(data=data, aes(x=contribToSI.rate.)) +
xlab(unique(data$contribToSI.rate.))
ggplot(data=data, aes(x=contribToSI.rate.))
ggplot(data=data, aes(x=contribToSI.rate.))
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()+
xlab(unique(data$contribToSI.rate.))
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()+
xlab(1:10)
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()+
xlab(1:10)
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()+
xlab(breaks= pretty_breaks())
ggplot(data=data, aes(x=contribToSI.rate.)) +
geom_bar()+
scale_x_continuous(breaks= pretty_breaks())
install.packages("breaks")
install.packages("scales")
install.packages("scales")
install.packages("dash")
install.packages("dashCoreComponents")
install.packages("dashHtmlComponents")
